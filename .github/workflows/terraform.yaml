on:
  workflow_call:
    inputs:
      goal:
        type: string
        description: "What Terraform goal to run. One of: plan, apply"

concurrency:
  group: ${{ github.workflow }}
  cancel-in-progress: false

env:
  TF_VAR_GITHUB_APP_ID: ${{ vars.BAKIORG_GITHUB_APP_ID }}
  TF_VAR_GITHUB_APP_INSTALLATION_ID: ${{ vars.BAKIORG_GITHUB_APP_INSTALLATION_ID }}

jobs:
  run-terraform:
    name: ${{ inputs.goal == 'plan' && 'Plan' || 'Apply' }}
    if: inputs.goal == 'plan' || inputs.goal == 'apply'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3.0.0

      - name: Format Terraform
        run: terraform fmt -recursive

      - name: Initialize Terraform
        run: terraform init

      - name: Put GitHub app private key in .pem file and configure environment variable
        run: |
          set -x
          
          file_name="github-app-private-key.pem"
          
          echo "$GITHUB_APP_PRIVATE_KEY" > "$file_name"
          echo "TF_VAR_GITHUB_APP_PEM_FILE=$file_name" >> "$GITHUB_ENV"

        env:
          GITHUB_APP_PRIVATE_KEY: ${{ secrets.BAKIORG_GITHUB_APP_PRIVATE_KEY }}

      - name: Decrypt Terraform state
        run: |
          gpg --quiet --batch --yes --decrypt --passphrase="$DECRYPT_KEY" \
          --output terraform.tfstate terraform.tfstate.gpg

        env:
          DECRYPT_KEY: ${{ secrets.BAKIORG_TERRAFORM_TFSTATE_GPG_KEY }}

      - name: Get short commit SHA
        id: get-short-commit-sha
        uses: ./.github/actions/get-short-commit-sha

      - name: Terraform Plan
        if: inputs.goal == 'plan'
        id: terraform-plan
        run: |
          file_name="tfplan-$SHORT_COMMIT_SHA"
          
          terraform plan -out="$file_name"
          
          echo "terraform-plan-file-name=$file_name" >> "$GITHUB_OUTPUT"

        env:
          SHORT_COMMIT_SHA: ${{ steps.get-short-commit-sha.outputs.short-commit-sha }}

      - name: Upload Terraform Plan as build artifact
        if: inputs.goal == 'plan'
        id: upload-terraform-plan-as-build-artifact
        uses: actions/upload-artifact@v4.3.1
        with:
          name: ${{ steps.terraform-plan.outputs.terraform-plan-file-name }}
          path: ./${{ steps.terraform-plan.outputs.terraform-plan-file-name }}

      - name: Comment Terraform plan on pull request
        uses: ./.github/actions/comment-plan-on-pull-request
        with:
          terraform-plan-file-name: ${{ steps.terraform-plan.outputs.terraform-plan-file-name }}
          terraform-plan-artifact-link: ${{ steps.upload-terraform-plan-as-build-artifact.outputs.artifact-url }}
