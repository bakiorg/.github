on:
  workflow_call:
    inputs:
      goal:
        type: string
        description: "What Terraform goal to run. One of: plan, apply"

concurrency:
  group: ${{ github.workflow }}
  cancel-in-progress: false

env:
  TF_VAR_GITHUB_APP_ID: ${{ vars.BAKIORG_GITHUB_APP_ID }}
  TF_VAR_GITHUB_APP_INSTALLATION_ID: ${{ vars.BAKIORG_GITHUB_APP_INSTALLATION_ID }}

jobs:
  run-terraform:
    name: ${{ inputs.goal == 'plan' && 'Plan' || 'Apply' }}
    if: inputs.goal == 'plan' || inputs.goal == 'apply'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4
        with:
          fetch-depth: 0

      - name: Checkout state
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4
        with:
          fetch-depth: 0
          ref: terraform-state
          path: state/

      - name: Copy state to workdir
        run: cp state/terraform.tfstate.gpg .

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@a1502cd9e758c50496cc9ac5308c4843bcd56d36 # v3.0.0

      - name: Format Terraform
        run: terraform fmt -check -recursive

      - name: Initialize Terraform
        run: terraform init

      - name: Validate Terraform
        run: terraform validate

      - name: Put GitHub app private key in .pem file and configure environment variable
        run: |
          set -x

          file_name="github-app-private-key.pem"

          echo "$GITHUB_APP_PRIVATE_KEY" > "$file_name"
          echo "TF_VAR_GITHUB_APP_PEM_FILE=$file_name" >> "$GITHUB_ENV"

        env:
          GITHUB_APP_PRIVATE_KEY: ${{ secrets.BAKIORG_GITHUB_APP_PRIVATE_KEY }}

      - name: Decrypt Terraform state
        run: |
          gpg --quiet --batch --yes --decrypt --passphrase="$DECRYPT_KEY" \
          --output terraform.tfstate terraform.tfstate.gpg

        env:
          DECRYPT_KEY: ${{ secrets.BAKIORG_TERRAFORM_TFSTATE_GPG_KEY }}

      - name: Get short commit SHA
        id: get-short-commit-sha
        uses: ./.github/actions/get-short-commit-sha

      - name: Terraform Plan
        id: terraform-plan
        run: |
          file_name="tfplan"

          terraform plan -out="$file_name"

          echo "terraform-plan-file-name=$file_name" >> "$GITHUB_OUTPUT"

      - name: Comment Terraform plan on pull request
        if: inputs.goal == 'plan'
        uses: ./.github/actions/comment-plan-on-pull-request
        with:
          terraform-plan-file-name: ${{ steps.terraform-plan.outputs.terraform-plan-file-name }}

      - name: Get source pull request number
        if: inputs.goal == 'apply'
        id: get-source-pull-request-number
        run: |
          set -x 

          last_commit_message=$(git log --format=%B -n 1 HEAD)
          regex=".*#([0-9]+)\)"

          if [[ $last_commit_message =~ $regex ]]; then
            pull_request_number="${BASH_REMATCH[1]}"
            echo "pull-request-number=$pull_request_number" >> "$GITHUB_OUTPUT"
          else
            echo "Could not find pull request number" 
            exit 1
          fi

        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Apply Terraform
        if: inputs.goal == 'apply'
        run: |
          set -x

          apply=$(terraform apply -no-color "$PLAN_FILE_NAME")

          echo "apply output: $apply"
        env:
          PLAN_FILE_NAME: ${{ steps.terraform-plan.outputs.terraform-plan-file-name }}

      - name: Encrypt Terraform state
        if: inputs.goal == 'apply'
        run: |
          gpg --quiet --yes --batch --passphrase="$ENCRYPT_KEY" --cipher-algo BLOWFISH \
          --output terraform.tfstate.gpg --symmetric terraform.tfstate

        env:
          ENCRYPT_KEY: ${{ secrets.BAKIORG_TERRAFORM_TFSTATE_GPG_KEY }}

      - name: Update state
        if: inputs.goal == 'apply'
        run: |
          set -x 

          cp terraform.tfstate.gpg state/
          cd state/

          if git diff --exit-code --quiet -- terraform.tfstate.gpg; then
            echo "No changes in terraform.tfstate.gpg"
            exit 0
          else
            git config --global user.name "github-actions[bot]"
            git config --global user.email "github-actions[bot]+username@users.noreply.github.com"          
            git add terraform.tfstate.gpg
            git commit -m "Auto-update terraform.tfstate.gpg"
            git push
          fi
